// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using NotasDoJogo.Persistence.Contexts;

#nullable disable

namespace NotasDoJogo.Persistence.Migrations
{
    [DbContext(typeof(NJContext))]
    partial class NJContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("NotasDoJogo.Domain.Models.Jogador", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("Idade")
                        .HasColumnType("int");

                    b.Property<decimal>("Media")
                        .HasColumnType("decimal(65,30)");

                    b.Property<string>("Nome")
                        .HasColumnType("longtext");

                    b.Property<string>("Posicao")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Jogadores");
                });

            modelBuilder.Entity("NotasDoJogo.Domain.Models.Nota", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int?>("JogadorId")
                        .HasColumnType("int");

                    b.Property<decimal>("Pontuacao")
                        .HasColumnType("decimal(65,30)");

                    b.Property<int?>("UsuarioId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("JogadorId");

                    b.HasIndex("UsuarioId");

                    b.ToTable("Notas");
                });

            modelBuilder.Entity("NotasDoJogo.Domain.Models.Partida", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Partidas");
                });

            modelBuilder.Entity("NotasDoJogo.Domain.Models.PartidaNota", b =>
                {
                    b.Property<int>("PartidaId")
                        .HasColumnType("int");

                    b.Property<int>("NotaId")
                        .HasColumnType("int");

                    b.HasKey("PartidaId", "NotaId");

                    b.HasIndex("NotaId");

                    b.ToTable("PartidaNota");
                });

            modelBuilder.Entity("NotasDoJogo.Domain.Models.Usuario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .HasColumnType("longtext");

                    b.Property<string>("Nome")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Usuarios");
                });

            modelBuilder.Entity("NotasDoJogo.Domain.Models.Nota", b =>
                {
                    b.HasOne("NotasDoJogo.Domain.Models.Jogador", "Jogador")
                        .WithMany()
                        .HasForeignKey("JogadorId");

                    b.HasOne("NotasDoJogo.Domain.Models.Usuario", "Usuario")
                        .WithMany("Notas")
                        .HasForeignKey("UsuarioId");

                    b.Navigation("Jogador");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("NotasDoJogo.Domain.Models.PartidaNota", b =>
                {
                    b.HasOne("NotasDoJogo.Domain.Models.Nota", "Nota")
                        .WithMany()
                        .HasForeignKey("NotaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("NotasDoJogo.Domain.Models.Partida", "Partida")
                        .WithMany("PartidasNotas")
                        .HasForeignKey("PartidaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Nota");

                    b.Navigation("Partida");
                });

            modelBuilder.Entity("NotasDoJogo.Domain.Models.Partida", b =>
                {
                    b.Navigation("PartidasNotas");
                });

            modelBuilder.Entity("NotasDoJogo.Domain.Models.Usuario", b =>
                {
                    b.Navigation("Notas");
                });
#pragma warning restore 612, 618
        }
    }
}
